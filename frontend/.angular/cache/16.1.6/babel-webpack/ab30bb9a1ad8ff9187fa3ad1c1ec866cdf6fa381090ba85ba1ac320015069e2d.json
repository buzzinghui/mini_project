{"ast":null,"code":"import { Ingredient } from '../shared/ingredient.model';\nimport { Subject } from 'rxjs';\nexport class ShoppingListService {\n  constructor() {\n    this.ingredientsChanged = new Subject();\n    this.startedEditing = new Subject();\n    this.ingredients = [new Ingredient('Apples', 5), new Ingredient('Tomatoes', 10)];\n  }\n  getIngredients() {\n    return this.ingredients.slice();\n  }\n  getIngredient(index) {\n    return this.ingredients[index];\n  }\n  addIngredient(ingredient) {\n    this.ingredients.push(ingredient);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n  addIngredients(ingredients) {\n    // for (let ingredient of ingredients) {\n    //   this.addIngredient(ingredient);\n    // }\n    this.ingredients.push(...ingredients);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n  updateIngredient(index, newIngredient) {\n    this.ingredients[index] = newIngredient;\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n  deleteIngredient(index) {\n    this.ingredients.splice(index, 1);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n}","map":{"version":3,"names":["Ingredient","Subject","ShoppingListService","constructor","ingredientsChanged","startedEditing","ingredients","getIngredients","slice","getIngredient","index","addIngredient","ingredient","push","next","addIngredients","updateIngredient","newIngredient","deleteIngredient","splice"],"sources":["C:\\Users\\lenze.quek.nl\\Downloads\\http-01-start\\lala\\src\\app\\shopping-list\\shopping-list.service.ts"],"sourcesContent":["import { Ingredient } from '../shared/ingredient.model';\nimport { Subject } from 'rxjs';\n\nexport class ShoppingListService {\n  ingredientsChanged = new Subject<Ingredient[]>();\n  startedEditing = new Subject<number>();\n  private ingredients: Ingredient[] = [\n    new Ingredient('Apples', 5),\n    new Ingredient('Tomatoes', 10),\n  ];\n\n  getIngredients() {\n    return this.ingredients.slice();\n  }\n\n  getIngredient(index: number) {\n    return this.ingredients[index];\n  }\n\n  addIngredient(ingredient: Ingredient) {\n    this.ingredients.push(ingredient);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  addIngredients(ingredients: Ingredient[]) {\n    // for (let ingredient of ingredients) {\n    //   this.addIngredient(ingredient);\n    // }\n    this.ingredients.push(...ingredients);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  updateIngredient(index: number, newIngredient: Ingredient) {\n    this.ingredients[index] = newIngredient;\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n\n  deleteIngredient(index: number) {\n    this.ingredients.splice(index, 1);\n    this.ingredientsChanged.next(this.ingredients.slice());\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,4BAA4B;AACvD,SAASC,OAAO,QAAQ,MAAM;AAE9B,OAAM,MAAOC,mBAAmB;EAAhCC,YAAA;IACE,KAAAC,kBAAkB,GAAG,IAAIH,OAAO,EAAgB;IAChD,KAAAI,cAAc,GAAG,IAAIJ,OAAO,EAAU;IAC9B,KAAAK,WAAW,GAAiB,CAClC,IAAIN,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,EAC3B,IAAIA,UAAU,CAAC,UAAU,EAAE,EAAE,CAAC,CAC/B;EAgCH;EA9BEO,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACD,WAAW,CAACE,KAAK,EAAE;EACjC;EAEAC,aAAaA,CAACC,KAAa;IACzB,OAAO,IAAI,CAACJ,WAAW,CAACI,KAAK,CAAC;EAChC;EAEAC,aAAaA,CAACC,UAAsB;IAClC,IAAI,CAACN,WAAW,CAACO,IAAI,CAACD,UAAU,CAAC;IACjC,IAAI,CAACR,kBAAkB,CAACU,IAAI,CAAC,IAAI,CAACR,WAAW,CAACE,KAAK,EAAE,CAAC;EACxD;EAEAO,cAAcA,CAACT,WAAyB;IACtC;IACA;IACA;IACA,IAAI,CAACA,WAAW,CAACO,IAAI,CAAC,GAAGP,WAAW,CAAC;IACrC,IAAI,CAACF,kBAAkB,CAACU,IAAI,CAAC,IAAI,CAACR,WAAW,CAACE,KAAK,EAAE,CAAC;EACxD;EAEAQ,gBAAgBA,CAACN,KAAa,EAAEO,aAAyB;IACvD,IAAI,CAACX,WAAW,CAACI,KAAK,CAAC,GAAGO,aAAa;IACvC,IAAI,CAACb,kBAAkB,CAACU,IAAI,CAAC,IAAI,CAACR,WAAW,CAACE,KAAK,EAAE,CAAC;EACxD;EAEAU,gBAAgBA,CAACR,KAAa;IAC5B,IAAI,CAACJ,WAAW,CAACa,MAAM,CAACT,KAAK,EAAE,CAAC,CAAC;IACjC,IAAI,CAACN,kBAAkB,CAACU,IAAI,CAAC,IAAI,CAACR,WAAW,CAACE,KAAK,EAAE,CAAC;EACxD"},"metadata":{},"sourceType":"module","externalDependencies":[]}