{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class NewitemComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.newItem = {}; // You can replace 'any' with an interface representing your item data\n  }\n\n  onSubmit(newItem) {\n    // Here, you can implement the logic to send the newItem data to the backend\n    // For example, you can use the HttpClient to make a POST request to your API\n    let token = localStorage.getItem('token');\n    const headers2 = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n    const requestOptions = {\n      headers: headers2\n    };\n    this.http.post('http://localhost:8080/api/admin/product/v1', this.newItem, requestOptions).subscribe(response => {\n      console.log('Item created successfully:', response);\n      // Optionally, you can handle the response or display a success message to the user\n    }, error => {\n      console.error('Error creating item:', error);\n      // Optionally, you can handle the error or display an error message to the user\n    });\n\n    alert(\"item added successfully\");\n    this.router.navigate(['/homepage']);\n  }\n  onFileChange(event) {\n    // Here, you can handle the file upload and save the file data to the newItem object\n    // For example, you can use the FileReader API to read the file and convert it to base64\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      this.newItem.thumbnail = reader.result;\n    };\n    reader.readAsDataURL(file);\n  }\n}\nNewitemComponent.ɵfac = function NewitemComponent_Factory(t) {\n  return new (t || NewitemComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\nNewitemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewitemComponent,\n  selectors: [[\"app-newitem\"]],\n  decls: 24,\n  vars: 4,\n  consts: [[1, \"create-item-container\"], [3, \"ngSubmit\"], [\"updateForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"price\"], [\"type\", \"number\", \"id\", \"price\", \"name\", \"price\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"stock\"], [\"type\", \"number\", \"id\", \"stock\", \"name\", \"stock\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function NewitemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Create New Item\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function NewitemComponent_Template_form_ngSubmit_3_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0.value));\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function NewitemComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.newItem.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"textarea\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function NewitemComponent_Template_textarea_ngModelChange_12_listener($event) {\n        return ctx.newItem.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Price:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function NewitemComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.newItem.price = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 10);\n      i0.ɵɵtext(19, \"Stock:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function NewitemComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.newItem.stock = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 3)(22, \"button\", 12);\n      i0.ɵɵtext(23, \"Create Item\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.newItem.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newItem.description);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newItem.price);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newItem.stock);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n\\n\\n.create-item-container[_ngcontent-%COMP%] {\\n    width: 400px;\\n    margin: 0 auto;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    border-radius: 10px;\\n  }\\n  \\n  .form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    display: block;\\n    font-weight: bold;\\n  }\\n  \\n  input[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 8px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    padding: 10px 20px;\\n    background-color: #4CAF50;\\n    color: white;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmV3aXRlbS9uZXdpdGVtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOEJBQThCOztBQUU5QjtJQUNJLFlBQVk7SUFDWixjQUFjO0lBQ2QsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxjQUFjO0lBQ2QsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UsV0FBVztJQUNYLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiLyogY3JlYXRlLWl0ZW0uY29tcG9uZW50LmNzcyAqL1xyXG5cclxuLmNyZWF0ZS1pdGVtLWNvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgXHJcbiAgaW5wdXQsIHRleHRhcmVhIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogOHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uIHtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["HttpHeaders","NewitemComponent","constructor","http","router","newItem","onSubmit","token","localStorage","getItem","headers2","requestOptions","headers","post","subscribe","response","console","log","error","alert","navigate","onFileChange","event","file","target","files","reader","FileReader","onloadend","thumbnail","result","readAsDataURL","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","selectors","decls","vars","consts","template","NewitemComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","NewitemComponent_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","value","NewitemComponent_Template_input_ngModelChange_8_listener","$event","name","NewitemComponent_Template_textarea_ngModelChange_12_listener","description","NewitemComponent_Template_input_ngModelChange_16_listener","price","NewitemComponent_Template_input_ngModelChange_20_listener","stock","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\lenze.quek.nl\\Downloads\\http-01-start\\lala\\src\\app\\newitem\\newitem.component.ts","C:\\Users\\lenze.quek.nl\\Downloads\\http-01-start\\lala\\src\\app\\newitem\\newitem.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Route, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-newitem',\n  templateUrl: './newitem.component.html',\n  styleUrls: ['./newitem.component.css']\n})\nexport class NewitemComponent {\n\n  newItem: any = {}; // You can replace 'any' with an interface representing your item data\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  onSubmit(newItem: { name: string; description: string; price: number;\n    stock: number }) {\n    // Here, you can implement the logic to send the newItem data to the backend\n    // For example, you can use the HttpClient to make a POST request to your API\n    let token = localStorage.getItem('token');\n\n    const headers2 = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n    const requestOptions = { headers: headers2 };\n    this.http.post('http://localhost:8080/api/admin/product/v1', this.newItem, requestOptions)\n      .subscribe((response) => {\n        console.log('Item created successfully:', response);\n        // Optionally, you can handle the response or display a success message to the user\n      }, (error) => {\n        console.error('Error creating item:', error);\n        // Optionally, you can handle the error or display an error message to the user\n      });\n      alert(\"item added successfully\");\n      this.router.navigate(['/homepage'])\n  }\n\n  onFileChange(event: any) {\n    // Here, you can handle the file upload and save the file data to the newItem object\n    // For example, you can use the FileReader API to read the file and convert it to base64\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      this.newItem.thumbnail = reader.result;\n    };\n    reader.readAsDataURL(file);\n  }\n\n}\n","<!-- create-item.component.html -->\n\n<div class=\"create-item-container\">\n    <h2>Create New Item</h2>\n    <form #updateForm=\"ngForm\" (ngSubmit)=\"onSubmit(updateForm.value)\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"newItem.name\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Description:</label>\n        <textarea id=\"description\" name=\"description\" [(ngModel)]=\"newItem.description\" required></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"price\">Price:</label>\n        <input type=\"number\" id=\"price\" name=\"price\" [(ngModel)]=\"newItem.price\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"stock\">Stock:</label>\n        <input type=\"number\" id=\"stock\" name=\"stock\" [(ngModel)]=\"newItem.stock\" required>\n      </div>\n      <!-- <div class=\"form-group\">\n        <label for=\"thumbnail\">Thumbnail:</label>\n        <input type=\"file\" id=\"thumbnail\" name=\"thumbnail\" (change)=\"onFileChange($event)\" accept=\"image/*\" required>\n      </div> -->\n      <div class=\"form-group\">\n        <button type=\"submit\">Create Item</button>\n      </div>\n    </form>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}