{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterPipe {\n  transform(value, filterString, propName) {\n    if (value.length === 0 || filterString === '') {\n      return value;\n    }\n    const resultArray = [];\n    for (const item of value) {\n      if (item[propName] === filterString) {\n        resultArray.push(item);\n      }\n    }\n    return resultArray;\n  }\n}\nFilterPipe.ɵfac = function FilterPipe_Factory(t) {\n  return new (t || FilterPipe)();\n};\nFilterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filter\",\n  type: FilterPipe,\n  pure: false\n});","map":{"version":3,"names":["FilterPipe","transform","value","filterString","propName","length","resultArray","item","push","pure"],"sources":["C:\\Users\\lenze.quek.nl\\Downloads\\http-01-start\\lala\\src\\app\\filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n    name: 'filter',\r\n    pure: false\r\n})\r\n\r\nexport class FilterPipe implements PipeTransform {\r\n    transform(value: any, filterString: string, propName: string): any {\r\n        if (value.length === 0 || filterString === '') {\r\n            return value;\r\n        }\r\n        const resultArray = [];\r\n        for (const item of value) {\r\n            if (item[propName] === filterString) {\r\n                resultArray.push(item);\r\n            }\r\n        }\r\n        return resultArray;\r\n    }\r\n}"],"mappings":";AAOA,OAAM,MAAOA,UAAU;EACnBC,SAASA,CAACC,KAAU,EAAEC,YAAoB,EAAEC,QAAgB;IACxD,IAAIF,KAAK,CAACG,MAAM,KAAK,CAAC,IAAIF,YAAY,KAAK,EAAE,EAAE;MAC3C,OAAOD,KAAK;;IAEhB,MAAMI,WAAW,GAAG,EAAE;IACtB,KAAK,MAAMC,IAAI,IAAIL,KAAK,EAAE;MACtB,IAAIK,IAAI,CAACH,QAAQ,CAAC,KAAKD,YAAY,EAAE;QACjCG,WAAW,CAACE,IAAI,CAACD,IAAI,CAAC;;;IAG9B,OAAOD,WAAW;EACtB;;AAZSN,UAAU,C;mBAAVA,UAAU;AAAA;AAAVA,UAAU,C;;QAAVA,UAAU;EAAAS,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}